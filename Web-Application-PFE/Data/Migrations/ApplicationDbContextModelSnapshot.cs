// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Web_Application_PFE.Data;

#nullable disable

namespace Web_Application_PFE.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "2",
                            ConcurrencyStamp = "2",
                            Name = "Lecteur",
                            NormalizedName = "LECTEUR"
                        },
                        new
                        {
                            Id = "3",
                            ConcurrencyStamp = "3",
                            Name = "Validateur",
                            NormalizedName = "VALIDATEUR"
                        },
                        new
                        {
                            Id = "4",
                            ConcurrencyStamp = "4",
                            Name = "Ingénieur RFQ",
                            NormalizedName = " RFQ"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Web_Application_PFE.Models.AddRFQ", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CustomerDatadate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CustomerDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DFM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DFT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EstimatedRevenue")
                        .HasColumnType("int");

                    b.Property<int>("EstimatedVolume")
                        .HasColumnType("int");

                    b.Property<string>("Feasibilityassessment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FeedbackDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("KOdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LabourDueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LabourRelease")
                        .HasColumnType("datetime2");

                    b.Property<string>("MarketSegment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MaterialDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaterialLeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MaterialRelease")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MaxRevenue")
                        .HasColumnType("int");

                    b.Property<int>("MaxVolume")
                        .HasColumnType("int");

                    b.Property<int?>("NRE")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfRefToBeQuoted")
                        .HasColumnType("int");

                    b.Property<string>("QuoteName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("RFQId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SOPDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sales")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Statut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatutRFQ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TestDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TestLeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TestRelease")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeRFQ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VALeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkingStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("CreatorId");

                    b.ToTable("AddRFQs");
                });

            modelBuilder.Entity("Web_Application_PFE.Models.AuditLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdditionalInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("Web_Application_PFE.Models.Brouillon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CustomerDatadate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CustomerDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DFM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DFT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EstimatedRevenue")
                        .HasColumnType("int");

                    b.Property<int?>("EstimatedVolume")
                        .HasColumnType("int");

                    b.Property<string>("Feasibilityassessment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FeedbackDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KOdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LabourDueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LabourRelease")
                        .HasColumnType("datetime2");

                    b.Property<string>("MarketSegment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("MaterialDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaterialLeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("MaterialRelease")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MaxRevenue")
                        .HasColumnType("int");

                    b.Property<int?>("MaxVolume")
                        .HasColumnType("int");

                    b.Property<int?>("NRE")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfRefToBeQuoted")
                        .HasColumnType("int");

                    b.Property<string>("QuoteName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RFQId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SOPDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sales")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Statut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatutRFQ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TestDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TestLeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TestRelease")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeRFQ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VALeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkingStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Brouillons");
                });

            modelBuilder.Entity("Web_Application_PFE.Models.EntityClient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailClient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sales")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("EntityClients");
                });

            modelBuilder.Entity("Web_Application_PFE.Models.Epingle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CustomerDatadate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CustomerDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DFM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DFT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EstimatedRevenue")
                        .HasColumnType("int");

                    b.Property<int?>("EstimatedVolume")
                        .HasColumnType("int");

                    b.Property<string>("Feasibilityassessment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FeedbackDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KOdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LabourDueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LabourRelease")
                        .HasColumnType("datetime2");

                    b.Property<string>("MarketSegment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("MaterialDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaterialLeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("MaterialRelease")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MaxRevenue")
                        .HasColumnType("int");

                    b.Property<int?>("MaxVolume")
                        .HasColumnType("int");

                    b.Property<int?>("NRE")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfRefToBeQuoted")
                        .HasColumnType("int");

                    b.Property<string>("QuoteName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RFQId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SOPDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sales")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Statut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatutRFQ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TestDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TestLeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TestRelease")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeRFQ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VALeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkingStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Epingles");
                });

            modelBuilder.Entity("Web_Application_PFE.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomRFQNumber")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool?>("IsRead")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<int?>("RFQId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RFQId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Web_Application_PFE.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nom")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Prenom")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("imagePath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Web_Application_PFE.Models.VersionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddRFQId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CustomerDatadate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CustomerDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DFM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DFT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EstimatedRevenue")
                        .HasColumnType("int");

                    b.Property<int>("EstimatedVolume")
                        .HasColumnType("int");

                    b.Property<string>("Feasibilityassessment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FeedbackDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("KOdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LabourDueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LabourRelease")
                        .HasColumnType("datetime2");

                    b.Property<string>("MarketSegment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MaterialDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaterialLeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MaterialRelease")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MaxRevenue")
                        .HasColumnType("int");

                    b.Property<int>("MaxVolume")
                        .HasColumnType("int");

                    b.Property<int?>("NRE")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfRefToBeQuoted")
                        .HasColumnType("int");

                    b.Property<string>("QuoteName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RFQId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SOPDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sales")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Statut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatutRFQ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TestDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TestLeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TestRelease")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeRFQ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VALeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkingStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddRFQId");

                    b.HasIndex("ClientId");

                    b.HasIndex("CreatorId");

                    b.ToTable("VersionEntities");
                });

            modelBuilder.Entity("Web_Application_PFE.ViewModels.VersionViewModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddRFQId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CustomerDatadate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CustomerDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DFM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DFT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EstimatedRevenue")
                        .HasColumnType("int");

                    b.Property<int>("EstimatedVolume")
                        .HasColumnType("int");

                    b.Property<string>("Feasibilityassessment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FeedbackDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsVersion")
                        .HasColumnType("bit");

                    b.Property<DateTime>("KOdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LabourDueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LabourRelease")
                        .HasColumnType("datetime2");

                    b.Property<string>("MarketSegment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MaterialDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaterialLeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MaterialRelease")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MaxRevenue")
                        .HasColumnType("int");

                    b.Property<int>("MaxVolume")
                        .HasColumnType("int");

                    b.Property<int?>("NRE")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfRefToBeQuoted")
                        .HasColumnType("int");

                    b.Property<string>("QuoteName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RFQId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SOPDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sales")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Statut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatutRFQ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TestDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TestLeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TestRelease")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeRFQ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VALeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VersionNumber")
                        .HasColumnType("int");

                    b.Property<string>("WorkingStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VersionViewModel");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Web_Application_PFE.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Web_Application_PFE.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Web_Application_PFE.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Web_Application_PFE.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Web_Application_PFE.Models.AddRFQ", b =>
                {
                    b.HasOne("Web_Application_PFE.Models.EntityClient", "Client")
                        .WithMany("AddRFQs")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Web_Application_PFE.Models.User", "Creator")
                        .WithMany("CreatedRFQs")
                        .HasForeignKey("CreatorId");

                    b.Navigation("Client");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("Web_Application_PFE.Models.AuditLog", b =>
                {
                    b.HasOne("Web_Application_PFE.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("User");
                });

            modelBuilder.Entity("Web_Application_PFE.Models.Brouillon", b =>
                {
                    b.HasOne("Web_Application_PFE.Models.EntityClient", "Client")
                        .WithMany("Brouillons")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Web_Application_PFE.Models.Epingle", b =>
                {
                    b.HasOne("Web_Application_PFE.Models.EntityClient", "Client")
                        .WithMany("Epingles")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Web_Application_PFE.Models.Notification", b =>
                {
                    b.HasOne("Web_Application_PFE.Models.AddRFQ", "RFQ")
                        .WithMany()
                        .HasForeignKey("RFQId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RFQ");
                });

            modelBuilder.Entity("Web_Application_PFE.Models.VersionEntity", b =>
                {
                    b.HasOne("Web_Application_PFE.Models.AddRFQ", "AddRFQ")
                        .WithMany("VersionEntities")
                        .HasForeignKey("AddRFQId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Web_Application_PFE.Models.EntityClient", "Client")
                        .WithMany("VersionEntities")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Web_Application_PFE.Models.User", "Creator")
                        .WithMany("CreatedVRSs")
                        .HasForeignKey("CreatorId");

                    b.Navigation("AddRFQ");

                    b.Navigation("Client");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("Web_Application_PFE.Models.AddRFQ", b =>
                {
                    b.Navigation("VersionEntities");
                });

            modelBuilder.Entity("Web_Application_PFE.Models.EntityClient", b =>
                {
                    b.Navigation("AddRFQs");

                    b.Navigation("Brouillons");

                    b.Navigation("Epingles");

                    b.Navigation("VersionEntities");
                });

            modelBuilder.Entity("Web_Application_PFE.Models.User", b =>
                {
                    b.Navigation("CreatedRFQs");

                    b.Navigation("CreatedVRSs");
                });
#pragma warning restore 612, 618
        }
    }
}
