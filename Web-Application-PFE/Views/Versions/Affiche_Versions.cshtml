@model IEnumerable<Web_Application_PFE.ViewModels.VersionViewModel>
@Html.AntiForgeryToken()
@{
    ViewData["Title"] = "Afficher les versions";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="~/css/Gestion-RFQ.css" />
}
<style>
    .table th {
        background-color: #343a40;
        color: white;
    }

    .badge {
        padding: 0.5em 0.75em;
        font-size: 0.85em;
        font-weight: 600;
    }

    .badge-success {
        background-color: #28a745;
    }

    .badge-warning {
        background-color: #ffc107;
        color: #212529;
    }

    .badge-danger {
        background-color: #dc3545;
    }

    .badge-secondary {
        background-color: #6c757d;
    }

    .btn-sm {
        padding: 0.25rem 0.5rem;
        font-size: 0.875rem;
        line-height: 1.5;
        border-radius: 0.2rem;
    }

    .btn-group .btn {
        margin-right: 5px;
    }

        .btn-group .btn:last-child {
            margin-right: 0;
        }</style>
<main role="main" class="pb-3" style="margin-left:153px; margin-top:10px;">
    <div class="card shadow-sm p-3 mb-3 bg-white rounded" style="width: 96%;">
<div class="container mt-1">
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead class="thead-dark">
                <tr>
                    <th>ID Version</th>
                    <th>RFQ Originale</th>
                   @*  <th>Nom du Devis</th> *@
                    <th>Client</th>
                    <th>Date Création</th>
                    <th>Statut</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null)
                {
                    @foreach (var version in Model)
                    {
                        <tr>
                            <td>V@(version.Id)</td>
                            <td>RFQ-@(version?.RFQId?.ToString() ?? "N/A")</td>
                           @*  <td>@(version?.QuoteName ?? "N/A")</td> *@
                            <td>@(version?.Customer ?? "N/A")</td>
                            <td>@(version?.DateCreation.ToString("dd/MM/yyyy HH:mm") ?? "N/A")</td>
                            <td>
                                        @if (version?.WorkingStatus != null)
                                {
                                            <span class="badge @GetStatusBadgeClass(version.WorkingStatus)">
                                                @version.WorkingStatus
                                    </span>
                                }
                                else
                                {
                                    <span>N/A</span>
                                }
                            </td>
                            <td>
                                @if (version != null)
                                {
                                    <div class="btn-group" role="group">
                                                <a href="@Url.Action("AfficheDetails", "Versions", new { id = version.Id })"
                                                   class="btn btn-info btn-sm">
                                                    <i class="fas fa-eye"></i> Détails
                                                </a>
                                                <button class="btn btn-danger btn-sm delete-btn" data-id="@version.Id">
                                                    <i class="fas fa-trash"></i> Supprimer
                                                </button>
                                    </div>
                                }
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7" class="text-center">Aucune version disponible</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Modal de confirmation de suppression -->
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirmer la suppression</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Êtes-vous sûr de vouloir supprimer cette version ?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Annuler</button>
                <button type="button" class="btn btn-danger" id="confirmDelete">Supprimer</button>
            </div>
        </div>
    </div>
</div>
    </div>
</main>
    @section Scripts {
        <script>

            $(document).ready(function() {
                 // Gestion du clic sur le bouton Supprimer
                 $(document).on('click', '.delete-btn', function(e) {
                     e.preventDefault();
                     var versionId = $(this).data('id');

                     Swal.fire({
                         title: 'Confirmer la suppression',
                         text: "Êtes-vous sûr de vouloir supprimer cette version ?",
                         icon: 'warning',
                         showCancelButton: true,
                         confirmButtonColor: '#d33',
                         cancelButtonColor: '#3085d6',
                         confirmButtonText: 'Oui, supprimer!',
                         cancelButtonText: 'Annuler'
                     }).then((result) => {
                         if (result.isConfirmed) {
                             $.ajax({
                                 url: '@Url.Action("DeleteVersion", "Versions")',
                                 type: 'POST',
                                 data: {
                                     id: versionId,
                                     __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                                 },
                                 success: function(response) {
                                     if (response.success) {
                                         Swal.fire({
                                             title: 'Supprimé!',
                                             text: response.message,
                                             icon: 'success',
                                             confirmButtonText: 'OK'
                                         }).then(() => {
                                             location.reload();
                                         });
                                     } else {
                                         Swal.fire({
                                             title: 'Erreur',
                                             text: response.message,
                                             icon: 'error',
                                             confirmButtonText: 'OK'
                                         });
                                     }
                                 },
                                 error: function(xhr) {
                                     Swal.fire({
                                         title: 'Erreur',
                                         text: 'Erreur serveur: ' + xhr.statusText,
                                         icon: 'error',
                                         confirmButtonText: 'OK'
                                     });
                                 }
                             });
                         }
                     });
                 });
             });
        
     </script>


@functions {
    public string GetStatusBadgeClass(string statut)
    {
        switch (statut)
        {
            case "Complete":
                return "badge-success";
            case "In Progress":
                return "badge-warning";
            case "Not Started":
                return "badge-danger";
            default:
                return "badge-secondary";
        }
    }
}

       
    }

